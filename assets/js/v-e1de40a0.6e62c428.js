"use strict";(self.webpackChunkzerone_docs=self.webpackChunkzerone_docs||[]).push([[439],{9514:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-e1de40a0",path:"/techniques/role.html",title:"Role authorization",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Basic RBAC implementation",slug:"basic-rbac-implementation",children:[]}],filePathRelative:"techniques/role.md",git:{updatedTime:1635564618e3,contributors:[{name:"“张智皓”",email:"zhang948498@163.com",commits:1}]}}},4155:(s,n,a)=>{a.r(n),a.d(n,{default:()=>p});const e=(0,a(6252).uE)('<h1 id="role-authorization" tabindex="-1"><a class="header-anchor" href="#role-authorization" aria-hidden="true">#</a> Role authorization</h1><p>Authorization refers to the process that determines what a user is able to do. For example, an administrative user is allowed to create, edit, and delete posts. A non-administrative user is only authorized to read the posts.</p><h2 id="basic-rbac-implementation" tabindex="-1"><a class="header-anchor" href="#basic-rbac-implementation" aria-hidden="true">#</a> Basic RBAC implementation</h2><ul><li><strong>Step 1</strong>: Install a simple permission verification package provided by <code>Zerone</code></li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> @zeronejs/role-easy\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li><strong>Step 2</strong>: let&#39;s create a Role enum representing roles in the system</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>It is common/role/enums.ts</p></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">enum</span> Role <span class="token punctuation">{</span>\n  User <span class="token operator">=</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span>\n  Admin <span class="token operator">=</span> <span class="token string">&#39;admin&#39;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li><strong>Step 3</strong>: Import RolesModule into the root module</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> RolesModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@zeronejs/role-easy&#39;</span><span class="token punctuation">;</span>\n<span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    imports<span class="token operator">:</span> <span class="token punctuation">[</span>\n        RolesModule<span class="token punctuation">,</span>\n        <span class="token comment">// ... Other modules</span>\n    <span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppModule</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li><strong>Step 4</strong>: Add the Roles decorator to the interface that requires permission validation</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Roles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@zeronejs/role-easy&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Role <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./common/role/enums&#39;</span><span class="token punctuation">;</span>\n\n<span class="token operator">...</span>\n<span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token decorator"><span class="token at operator">@</span><span class="token function">Roles</span></span><span class="token punctuation">(</span>Role<span class="token punctuation">.</span>Admin<span class="token punctuation">)</span>\n<span class="token function">getHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>appService<span class="token punctuation">.</span><span class="token function">getHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token operator">...</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>In this example, we assumed that <code>request.user</code> contains the user instance and allowed roles (under the <code>roles</code> property).</p><p>To make sure this example works, your <code>User</code> class must look as follows:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...other properties</span>\n  roles<span class="token operator">:</span> Role<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></div>',13),t={},p=(0,a(3744).Z)(t,[["render",function(s,n){return e}]])},3744:(s,n)=>{n.Z=(s,n)=>{for(const[a,e]of n)s[a]=e;return s}}}]);