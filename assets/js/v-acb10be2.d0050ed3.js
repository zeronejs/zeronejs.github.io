"use strict";(self.webpackChunk_zerone_vuepress_starter=self.webpackChunk_zerone_vuepress_starter||[]).push([[673],{9241:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-acb10be2",path:"/guide/i18n.html",title:"I18n",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Site I18n Config",slug:"site-i18n-config",children:[]},{level:2,title:"Theme I18n Config",slug:"theme-i18n-config",children:[]}],filePathRelative:"guide/i18n.md",git:{updatedTime:1635391738e3,contributors:[{name:"“张智皓”",email:"zhang948498@163.com",commits:1}]}}},4148:(n,s,a)=>{a.r(s),a.d(s,{default:()=>x});var e=a(6252);const t=(0,e.uE)('<h1 id="i18n" tabindex="-1"><a class="header-anchor" href="#i18n" aria-hidden="true">#</a> I18n</h1><h2 id="site-i18n-config" tabindex="-1"><a class="header-anchor" href="#site-i18n-config" aria-hidden="true">#</a> Site I18n Config</h2><p>To take advantage of multi-language support in VuePress, you first need to use the following file and directory structure:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>docs\n├─ README.md\n├─ foo.md\n├─ nested\n│  └─ README.md\n└─ zh\n   ├─ README.md\n   ├─ foo.md\n   └─ nested\n      └─ README.md\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>',4),p=(0,e.Uk)("Then, specify the "),o=(0,e._)("code",null,"locales",-1),l=(0,e.Uk)(" option in your "),c=(0,e.Uk)("config file"),r=(0,e.Uk)(":"),i=(0,e.uE)('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  locales<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// The key is the path for the locale to be nested under.</span>\n    <span class="token comment">// As a special case, the default locale can use &#39;/&#39; as its path.</span>\n    <span class="token string">&#39;/&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      lang<span class="token operator">:</span> <span class="token string">&#39;en-US&#39;</span><span class="token punctuation">,</span>\n      title<span class="token operator">:</span> <span class="token string">&#39;VuePress&#39;</span><span class="token punctuation">,</span>\n      description<span class="token operator">:</span> <span class="token string">&#39;Vue-powered Static Site Generator&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token string">&#39;/zh/&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      lang<span class="token operator">:</span> <span class="token string">&#39;zh-CN&#39;</span><span class="token punctuation">,</span>\n      title<span class="token operator">:</span> <span class="token string">&#39;VuePress&#39;</span><span class="token punctuation">,</span>\n      description<span class="token operator">:</span> <span class="token string">&#39;Vue 驱动的静态网站生成器&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>If a locale does not have a <code>lang</code>, <code>title</code>, <code>description</code> or <code>head</code>, VuePress will fallback to the root-level values. You can omit the root level config as long as they are provided in each locale.</p>',2),u={class:"custom-container tip"},d=(0,e._)("p",{class:"custom-container-title"},"TIP",-1),m=(0,e.Uk)("Config reference: "),b=(0,e.Uk)("locales"),k=(0,e.uE)('<h2 id="theme-i18n-config" tabindex="-1"><a class="header-anchor" href="#theme-i18n-config" aria-hidden="true">#</a> Theme I18n Config</h2><p>VuePress does not restrict how themes provide multi-language support, so each theme may have different way to handle i18n, and some themes may not provide multi-language support at all. You&#39;d better refer to the theme documentation for detailed guide.</p><p>If you are using default theme, the multi-language support is the same as above:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  themeConfig<span class="token operator">:</span> <span class="token punctuation">{</span>\n    locales<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string">&#39;/&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        selectLanguageName<span class="token operator">:</span> <span class="token string">&#39;English&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token string">&#39;/zh/&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        selectLanguageName<span class="token operator">:</span> <span class="token string">&#39;简体中文&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>',4),g={class:"custom-container tip"},h=(0,e._)("p",{class:"custom-container-title"},"TIP",-1),f=(0,e.Uk)("Config reference: "),v=(0,e.Uk)("Default Theme > locales"),_={},x=(0,a(3744).Z)(_,[["render",function(n,s){const a=(0,e.up)("RouterLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("p",null,[p,o,l,(0,e.Wm)(a,{to:"/guide/configuration.html#config-file"},{default:(0,e.w5)((()=>[c])),_:1}),r]),i,(0,e._)("div",u,[d,(0,e._)("p",null,[m,(0,e.Wm)(a,{to:"/reference/config.html#locales"},{default:(0,e.w5)((()=>[b])),_:1})])]),k,(0,e._)("div",g,[h,(0,e._)("p",null,[f,(0,e.Wm)(a,{to:"/reference/default-theme/config.html#locales"},{default:(0,e.w5)((()=>[v])),_:1})])])],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}}}]);