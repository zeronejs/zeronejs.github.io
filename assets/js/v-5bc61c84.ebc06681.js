"use strict";(self.webpackChunkzerone_docs=self.webpackChunkzerone_docs||[]).push([[236],{1640:(s,n,a)=>{a.r(n),a.d(n,{data:()=>l});const l={key:"v-5bc61c84",path:"/techniques/auth.html",title:"Authentication",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Installation",slug:"installation",children:[]},{level:2,title:"Start using",slug:"start-using",children:[]},{level:2,title:"The sample",slug:"the-sample",children:[]}],filePathRelative:"techniques/auth.md",git:{updatedTime:1637652908e3,contributors:[{name:"“张智皓”",email:"zhang948498@163.com",commits:5},{name:"zzh948498",email:"35091020+zzh948498@users.noreply.github.com",commits:2}]}}},2099:(s,n,a)=>{a.r(n),a.d(n,{default:()=>g});var l=a(6252);const e=(0,l._)("h1",{id:"authentication",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#authentication","aria-hidden":"true"},"#"),(0,l.Uk)(" Authentication")],-1),p=(0,l._)("p",null,"Authentication is an essential part of most applications. There are many different approaches and strategies to handle authentication. The approach taken for any project depends on its particular application requirements. This chapter presents several approaches to authentication that can be adapted to a variety of different requirements.",-1),o={href:"https://jwt.io/introduction/",target:"_blank",rel:"noopener noreferrer"},r=(0,l.Uk)("JWT introduction"),t=(0,l.uE)('<h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h2><p>Install an Auth authentication package provided by <code>Zerone</code>, including JWT Strategy and Local Strategy.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">yarn add @zeronejs/auth</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="start-using" tabindex="-1"><a class="header-anchor" href="#start-using" aria-hidden="true">#</a> Start using</h2><p>Import the AuthModule into the root module.</p>',5),c={class:"custom-container tip"},D=(0,l._)("p",{class:"custom-container-title"},"TIP",-1),i=(0,l.Uk)("We configure the "),y=(0,l._)("code",null,"AuthModule",-1),u=(0,l.Uk)(" using "),C=(0,l._)("code",null,"forRoot()",-1),d=(0,l.Uk)(", passing in a configuration object. "),h={href:"https://github.com/auth0/node-jsonwebtoken#usage",target:"_blank",rel:"noopener noreferrer"},b=(0,l.Uk)("here"),m=(0,l.Uk)(" for more details on the available configuration options."),A=(0,l.uE)('<div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">AuthModule</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@zeronejs/auth&#39;</span><span style="color:#D4D4D4;">;</span></span>\n<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#DCDCAA;">Module</span><span style="color:#D4D4D4;">({</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">imports:</span><span style="color:#D4D4D4;"> [</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">AuthModule</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">forRoot</span><span style="color:#D4D4D4;">({</span></span>\n<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">secret:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;secretKey&#39;</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">signOptions:</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">expiresIn:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;6h&#39;</span><span style="color:#D4D4D4;"> },</span></span>\n<span class="line"><span style="color:#D4D4D4;">        }),</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#6A9955;">// ... Other modules</span></span>\n<span class="line"><span style="color:#D4D4D4;">    ]</span></span>\n<span class="line"><span style="color:#D4D4D4;">})</span></span>\n<span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">class</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">AppModule</span><span style="color:#D4D4D4;"> {}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="custom-container danger"><p class="custom-container-title">DANGER</p><p>Do not expose this key publicly. We have done so here to make it clear what the code is doing, but in a production system you must protect this key using appropriate measures such as a secrets vault, environment variable, or configuration service.</p></div><p>The JWT Strategy is enabled globally by default. If the interface needs to skip JWT validation, use the decorator <code>@SkipJwtAuth</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">    @</span><span style="color:#DCDCAA;">SkipJwtAuth</span><span style="color:#D4D4D4;">()</span></span>\n<span class="line"><span style="color:#D4D4D4;">    @</span><span style="color:#DCDCAA;">Post</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;auth/register&#39;</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">register</span><span style="color:#D4D4D4;">(@</span><span style="color:#DCDCAA;">Body</span><span style="color:#D4D4D4;">() </span><span style="color:#9CDCFE;">createUserDto</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">UserCreateDto</span><span style="color:#D4D4D4;">) </span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="the-sample" tabindex="-1"><a class="header-anchor" href="#the-sample" aria-hidden="true">#</a> The sample</h2><p>Typically, you can use this module to implement login registration</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">UseGuards</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@nestjs/common&#39;</span><span style="color:#D4D4D4;">;</span></span>\n<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">SkipJwtAuth</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">AuthService</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">LocalAuthGuard</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Request</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">encryptedUserPassword</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@zeronejs/auth&#39;</span><span style="color:#D4D4D4;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#569CD6;">class</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">AppController</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">constructor</span><span style="color:#D4D4D4;">(</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#569CD6;">private</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">readonly</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">userService</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">UserService</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#569CD6;">private</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">readonly</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">authService</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">AuthService</span></span>\n<span class="line"><span style="color:#D4D4D4;">    ) {}</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span></span>\n<span class="line"><span style="color:#D4D4D4;">    @</span><span style="color:#DCDCAA;">SkipJwtAuth</span><span style="color:#D4D4D4;">()</span></span>\n<span class="line"><span style="color:#D4D4D4;">    @</span><span style="color:#DCDCAA;">Post</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;auth/register&#39;</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">register</span><span style="color:#D4D4D4;">(@</span><span style="color:#DCDCAA;">Body</span><span style="color:#D4D4D4;">() </span><span style="color:#9CDCFE;">createUserDto</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">UserCreateDto</span><span style="color:#D4D4D4;">) {</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">user</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">userService</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">({</span></span>\n<span class="line"><span style="color:#D4D4D4;">            ...</span><span style="color:#9CDCFE;">createUserDto</span><span style="color:#D4D4D4;">,</span></span>\n<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">password:</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">encryptedUserPassword</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">createUserDto</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">password</span><span style="color:#D4D4D4;">),</span></span>\n<span class="line"><span style="color:#D4D4D4;">        });</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">authService</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">login</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">user</span><span style="color:#D4D4D4;">);</span></span>\n<span class="line"><span style="color:#D4D4D4;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">    @</span><span style="color:#DCDCAA;">SkipJwtAuth</span><span style="color:#D4D4D4;">()</span></span>\n<span class="line"><span style="color:#D4D4D4;">    @</span><span style="color:#DCDCAA;">UseGuards</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">LocalAuthGuard</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">    @</span><span style="color:#DCDCAA;">Post</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;auth/login&#39;</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">login</span><span style="color:#D4D4D4;">(@</span><span style="color:#DCDCAA;">Req</span><span style="color:#D4D4D4;">() </span><span style="color:#9CDCFE;">req</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">Request</span><span style="color:#D4D4D4;">) {</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">authService</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">login</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">req</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">user</span><span style="color:#D4D4D4;">);</span></span>\n<span class="line"><span style="color:#D4D4D4;">    }</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>To invoke the <code>login</code> interface(Or when you use <code>LocalAuthGuard</code>), you need to provide the <code>username</code> and <code>passwrod</code> fields.</p></div>',8),E={},g=(0,a(3744).Z)(E,[["render",function(s,n){const a=(0,l.up)("OutboundLink");return(0,l.wg)(),(0,l.iD)(l.HY,null,[e,p,(0,l._)("p",null,[(0,l._)("a",o,[r,(0,l.Wm)(a)])]),t,(0,l._)("div",c,[D,(0,l._)("p",null,[i,y,u,C,d,(0,l._)("a",h,[b,(0,l.Wm)(a)]),m])]),A],64)}]])},3744:(s,n)=>{n.Z=(s,n)=>{for(const[a,l]of n)s[a]=l;return s}}}]);