"use strict";(self.webpackChunkzerone_docs=self.webpackChunkzerone_docs||[]).push([[434],{4121:(s,n,a)=>{a.r(n),a.d(n,{data:()=>l});const l={key:"v-e114075e",path:"/techniques/redis.html",title:"The cache",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Redis",slug:"redis",children:[]}],filePathRelative:"techniques/redis.md",git:{updatedTime:1635918093e3,contributors:[{name:"zzh948498",email:"35091020+zzh948498@users.noreply.github.com",commits:2},{name:"“张智皓”",email:"zhang948498@163.com",commits:1}]}}},287:(s,n,a)=>{a.r(n),a.d(n,{default:()=>m});var l=a(6252);const e=(0,l._)("h1",{id:"the-cache",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#the-cache","aria-hidden":"true"},"#"),(0,l.Uk)(" The cache")],-1),p={href:"https://redis.io",target:"_blank",rel:"noopener noreferrer"},o=(0,l.Uk)("Redis"),r=(0,l.Uk)(" is a high-performance key-value database"),c=(0,l._)("p",null,"Redis largely compensates for memcached key/value storage, and in some cases complements relational databases.",-1),D={class:"custom-container tip"},t=(0,l._)("p",{class:"custom-container-title"},"TIP",-1),i=(0,l.Uk)("You need to install "),y={href:"https://redis.io/download",target:"_blank",rel:"noopener noreferrer"},d=(0,l.Uk)("redis"),u=(0,l.Uk)(" ， or have a valid redis address"),C=(0,l.uE)('<h2 id="redis" tabindex="-1"><a class="header-anchor" href="#redis" aria-hidden="true">#</a> Redis</h2><ul><li><strong>Step 1</strong>: Install the Redis module package provided by Zerone</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">yarn add @zeronejs/redis</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li><strong>Step 2</strong>: Import RedisModule into the root module</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">RedisModule</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@zeronejs/redis&#39;</span><span style="color:#D4D4D4;">;</span></span>\n<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#DCDCAA;">Module</span><span style="color:#D4D4D4;">({</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">imports:</span><span style="color:#D4D4D4;"> [</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">RedisModule</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">forRoot</span><span style="color:#D4D4D4;">(), </span><span style="color:#6A9955;">// uses defaults unless given configuration object</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#6A9955;">// ... Other modules</span></span>\n<span class="line"><span style="color:#D4D4D4;">    ]</span></span>\n<span class="line"><span style="color:#D4D4D4;">})</span></span>\n<span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">class</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">AppModule</span><span style="color:#D4D4D4;"> {}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li><strong>Step 3</strong>: Dependency injection where Redis is needed</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">Inject</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@nestjs/common&#39;</span><span style="color:#D4D4D4;">;</span></span>\n<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">REDIS_CLIENT</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Redis</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@zeronejs/redis&#39;</span><span style="color:#D4D4D4;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">...</span></span>\n<span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">class</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">AppController</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">constructor</span><span style="color:#D4D4D4;">(</span></span>\n<span class="line"><span style="color:#D4D4D4;">        @</span><span style="color:#DCDCAA;">Inject</span><span style="color:#D4D4D4;">(</span><span style="color:#4FC1FF;">REDIS_CLIENT</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">private</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">readonly</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">redisClient</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">Redis</span></span>\n<span class="line"><span style="color:#D4D4D4;">    ) {}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">    @</span><span style="color:#DCDCAA;">Get</span><span style="color:#D4D4D4;">()</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">getHello</span><span style="color:#D4D4D4;">() {</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">redisClient</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">set</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;key&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;value&#39;</span><span style="color:#D4D4D4;">));</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">redisClient</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;key&#39;</span><span style="color:#D4D4D4;">));</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;hello&#39;</span><span style="color:#D4D4D4;">;</span></span>\n<span class="line"><span style="color:#D4D4D4;">    }</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"><span style="color:#D4D4D4;">...</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>',7),b={},m=(0,a(3744).Z)(b,[["render",function(s,n){const a=(0,l.up)("OutboundLink");return(0,l.wg)(),(0,l.iD)(l.HY,null,[e,(0,l._)("p",null,[(0,l._)("a",p,[o,(0,l.Wm)(a)]),r]),c,(0,l._)("div",D,[t,(0,l._)("p",null,[i,(0,l._)("a",y,[d,(0,l.Wm)(a)]),u])]),C],64)}]])},3744:(s,n)=>{n.Z=(s,n)=>{for(const[a,l]of n)s[a]=l;return s}}}]);