"use strict";(self.webpackChunkzerone_docs=self.webpackChunkzerone_docs||[]).push([[743],{9066:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-4e449d82",path:"/zh/techniques/redis.html",title:"高速缓存",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"Redis",slug:"redis",children:[]}],filePathRelative:"zh/techniques/redis.md",git:{updatedTime:1635903539e3,contributors:[{name:"“张智皓”",email:"zhang948498@163.com",commits:1}]}}},3434:(n,s,a)=>{a.r(s),a.d(s,{default:()=>h});var p=a(6252);const e=(0,p._)("h1",{id:"高速缓存",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#高速缓存","aria-hidden":"true"},"#"),(0,p.Uk)(" 高速缓存")],-1),t={href:"https://redis.io",target:"_blank",rel:"noopener noreferrer"},o=(0,p.Uk)("Redis"),c=(0,p.Uk)(" 是一个高性能的key-value数据库"),l=(0,p._)("p",null,"Redis 的出现，很大程度补偿了memcached这类key/value存储的不足，在部分场合可以对关系数据库起到很好的补充作用。",-1),r={class:"custom-container tip"},u=(0,p._)("p",{class:"custom-container-title"},"提示",-1),i=(0,p.Uk)("您需要安装 "),k={href:"https://redis.io/download",target:"_blank",rel:"noopener noreferrer"},d=(0,p.Uk)("redis"),b=(0,p.Uk)(" ，或者有一个有效的redis地址"),m=(0,p.uE)('<h2 id="redis" tabindex="-1"><a class="header-anchor" href="#redis" aria-hidden="true">#</a> Redis</h2><ul><li><strong>步骤1</strong>: 安装Zerone 提供的redis模块包</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> @zeronejs/redis\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li><strong>步骤2</strong>: 将RedisModule导入根模块</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> RedisModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@zeronejs/redis&#39;</span><span class="token punctuation">;</span>\n<span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    imports<span class="token operator">:</span> <span class="token punctuation">[</span>\n        RedisModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 除非给定配置对象，否则使用默认值</span>\n        <span class="token comment">// ... 其他模块</span>\n    <span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppModule</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li><strong>步骤3</strong>: 在需要redis 的地方 依赖注入</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Inject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">REDIS_CLIENT</span><span class="token punctuation">,</span> Redis <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@zeronejs/redis&#39;</span><span class="token punctuation">;</span>\n\n<span class="token operator">...</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppController</span> <span class="token punctuation">{</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span>\n        <span class="token decorator"><span class="token at operator">@</span><span class="token function">Inject</span></span><span class="token punctuation">(</span><span class="token constant">REDIS_CLIENT</span><span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token keyword">readonly</span> redisClient<span class="token operator">:</span> Redis\n    <span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">async</span> <span class="token function">getHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>redisClient<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>redisClient<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token operator">...</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>',7),g={},h=(0,a(3744).Z)(g,[["render",function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[e,(0,p._)("p",null,[(0,p._)("a",t,[o,(0,p.Wm)(a)]),c]),l,(0,p._)("div",r,[u,(0,p._)("p",null,[i,(0,p._)("a",k,[d,(0,p.Wm)(a)]),b])]),m],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,p]of s)n[a]=p;return n}}}]);